{"ast":null,"code":"import _asyncToGenerator from \"D:/HTL_D/5AHITM/SEW/sew-xmas-trees/frontend/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../../shared/backend.service\";\n\nfunction TreeListComponent_app_tree_display_0_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"app-tree-display\", 1);\n  }\n\n  if (rf & 2) {\n    const treeId_r1 = ctx.$implicit;\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"treeId\", treeId_r1)(\"type\", ctx_r0.selectedTreeType);\n  }\n}\n\nexport class TreeListComponent {\n  constructor(backendService) {\n    this.backendService = backendService;\n    this.treeIds = null;\n  }\n\n  ngOnChanges(changes) {\n    var _this = this;\n\n    return _asyncToGenerator(function* () {\n      yield _this.loadTrees(changes['selectedTreeType'].currentValue).then();\n    })();\n  }\n\n  loadTrees(type) {\n    var _this2 = this;\n\n    return _asyncToGenerator(function* () {\n      _this2.treeIds = yield _this2.backendService.getTreesOfType(type);\n    })();\n  }\n\n}\n\nTreeListComponent.ɵfac = function TreeListComponent_Factory(t) {\n  return new (t || TreeListComponent)(i0.ɵɵdirectiveInject(i1.BackendService));\n};\n\nTreeListComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: TreeListComponent,\n  selectors: [[\"app-tree-list\"]],\n  inputs: {\n    selectedTreeType: \"selectedTreeType\"\n  },\n  features: [i0.ɵɵNgOnChangesFeature],\n  decls: 1,\n  vars: 1,\n  consts: [[3, \"treeId\", \"type\", 4, \"ngFor\", \"ngForOf\"], [3, \"treeId\", \"type\"]],\n  template: function TreeListComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵtemplate(0, TreeListComponent_app_tree_display_0_Template, 1, 2, \"app-tree-display\", 0);\n    }\n\n    if (rf & 2) {\n      i0.ɵɵproperty(\"ngForOf\", ctx.treeIds);\n    }\n  },\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJ0cmVlLWxpc3QuY29tcG9uZW50LnNjc3MifQ== */\"]\n});","map":{"version":3,"sources":["D:/HTL_D/5AHITM/SEW/sew-xmas-trees/frontend/src/app/tree/tree-list/tree-list.component.ts"],"names":["i0","i1","TreeListComponent_app_tree_display_0_Template","rf","ctx","ɵɵelement","treeId_r1","$implicit","ctx_r0","ɵɵnextContext","ɵɵproperty","selectedTreeType","TreeListComponent","constructor","backendService","treeIds","ngOnChanges","changes","loadTrees","currentValue","then","type","getTreesOfType","ɵfac","TreeListComponent_Factory","t","ɵɵdirectiveInject","BackendService","ɵcmp","ɵɵdefineComponent","selectors","inputs","features","ɵɵNgOnChangesFeature","decls","vars","consts","template","TreeListComponent_Template","ɵɵtemplate","styles"],"mappings":";AAAA,OAAO,KAAKA,EAAZ,MAAoB,eAApB;AACA,OAAO,KAAKC,EAAZ,MAAoB,8BAApB;;AACA,SAASC,6CAAT,CAAuDC,EAAvD,EAA2DC,GAA3D,EAAgE;AAAE,MAAID,EAAE,GAAG,CAAT,EAAY;AAC1EH,IAAAA,EAAE,CAACK,SAAH,CAAa,CAAb,EAAgB,kBAAhB,EAAoC,CAApC;AACH;;AAAC,MAAIF,EAAE,GAAG,CAAT,EAAY;AACV,UAAMG,SAAS,GAAGF,GAAG,CAACG,SAAtB;AACA,UAAMC,MAAM,GAAGR,EAAE,CAACS,aAAH,EAAf;AACAT,IAAAA,EAAE,CAACU,UAAH,CAAc,QAAd,EAAwBJ,SAAxB,EAAmC,MAAnC,EAA2CE,MAAM,CAACG,gBAAlD;AACH;AAAE;;AACH,OAAO,MAAMC,iBAAN,CAAwB;AAC3BC,EAAAA,WAAW,CAACC,cAAD,EAAiB;AACxB,SAAKA,cAAL,GAAsBA,cAAtB;AACA,SAAKC,OAAL,GAAe,IAAf;AACH;;AACKC,EAAAA,WAAW,CAACC,OAAD,EAAU;AAAA;;AAAA;AACvB,YAAM,KAAI,CAACC,SAAL,CAAeD,OAAO,CAAC,kBAAD,CAAP,CAA4BE,YAA3C,EACDC,IADC,EAAN;AADuB;AAG1B;;AACKF,EAAAA,SAAS,CAACG,IAAD,EAAO;AAAA;;AAAA;AAClB,MAAA,MAAI,CAACN,OAAL,SAAqB,MAAI,CAACD,cAAL,CAAoBQ,cAApB,CAAmCD,IAAnC,CAArB;AADkB;AAErB;;AAX0B;;AAa/BT,iBAAiB,CAACW,IAAlB,GAAyB,SAASC,yBAAT,CAAmCC,CAAnC,EAAsC;AAAE,SAAO,KAAKA,CAAC,IAAIb,iBAAV,EAA6BZ,EAAE,CAAC0B,iBAAH,CAAqBzB,EAAE,CAAC0B,cAAxB,CAA7B,CAAP;AAA+E,CAAhJ;;AACAf,iBAAiB,CAACgB,IAAlB,GAAyB,aAAc5B,EAAE,CAAC6B,iBAAH,CAAqB;AAAER,EAAAA,IAAI,EAAET,iBAAR;AAA2BkB,EAAAA,SAAS,EAAE,CAAC,CAAC,eAAD,CAAD,CAAtC;AAA2DC,EAAAA,MAAM,EAAE;AAAEpB,IAAAA,gBAAgB,EAAE;AAApB,GAAnE;AAA6GqB,EAAAA,QAAQ,EAAE,CAAChC,EAAE,CAACiC,oBAAJ,CAAvH;AAAkJC,EAAAA,KAAK,EAAE,CAAzJ;AAA4JC,EAAAA,IAAI,EAAE,CAAlK;AAAqKC,EAAAA,MAAM,EAAE,CAAC,CAAC,CAAD,EAAI,QAAJ,EAAc,MAAd,EAAsB,CAAtB,EAAyB,OAAzB,EAAkC,SAAlC,CAAD,EAA+C,CAAC,CAAD,EAAI,QAAJ,EAAc,MAAd,CAA/C,CAA7K;AAAoPC,EAAAA,QAAQ,EAAE,SAASC,0BAAT,CAAoCnC,EAApC,EAAwCC,GAAxC,EAA6C;AAAE,QAAID,EAAE,GAAG,CAAT,EAAY;AAC7WH,MAAAA,EAAE,CAACuC,UAAH,CAAc,CAAd,EAAiBrC,6CAAjB,EAAgE,CAAhE,EAAmE,CAAnE,EAAsE,kBAAtE,EAA0F,CAA1F;AACH;;AAAC,QAAIC,EAAE,GAAG,CAAT,EAAY;AACVH,MAAAA,EAAE,CAACU,UAAH,CAAc,SAAd,EAAyBN,GAAG,CAACW,OAA7B;AACH;AAAE,GAJqD;AAInDyB,EAAAA,MAAM,EAAE,CAAC,6KAAD;AAJ2C,CAArB,CAAvC","sourcesContent":["import * as i0 from \"@angular/core\";\r\nimport * as i1 from \"../../shared/backend.service\";\r\nfunction TreeListComponent_app_tree_display_0_Template(rf, ctx) { if (rf & 1) {\r\n    i0.ɵɵelement(0, \"app-tree-display\", 1);\r\n} if (rf & 2) {\r\n    const treeId_r1 = ctx.$implicit;\r\n    const ctx_r0 = i0.ɵɵnextContext();\r\n    i0.ɵɵproperty(\"treeId\", treeId_r1)(\"type\", ctx_r0.selectedTreeType);\r\n} }\r\nexport class TreeListComponent {\r\n    constructor(backendService) {\r\n        this.backendService = backendService;\r\n        this.treeIds = null;\r\n    }\r\n    async ngOnChanges(changes) {\r\n        await this.loadTrees(changes['selectedTreeType'].currentValue)\r\n            .then();\r\n    }\r\n    async loadTrees(type) {\r\n        this.treeIds = await this.backendService.getTreesOfType(type);\r\n    }\r\n}\r\nTreeListComponent.ɵfac = function TreeListComponent_Factory(t) { return new (t || TreeListComponent)(i0.ɵɵdirectiveInject(i1.BackendService)); };\r\nTreeListComponent.ɵcmp = /*@__PURE__*/ i0.ɵɵdefineComponent({ type: TreeListComponent, selectors: [[\"app-tree-list\"]], inputs: { selectedTreeType: \"selectedTreeType\" }, features: [i0.ɵɵNgOnChangesFeature], decls: 1, vars: 1, consts: [[3, \"treeId\", \"type\", 4, \"ngFor\", \"ngForOf\"], [3, \"treeId\", \"type\"]], template: function TreeListComponent_Template(rf, ctx) { if (rf & 1) {\r\n        i0.ɵɵtemplate(0, TreeListComponent_app_tree_display_0_Template, 1, 2, \"app-tree-display\", 0);\r\n    } if (rf & 2) {\r\n        i0.ɵɵproperty(\"ngForOf\", ctx.treeIds);\r\n    } }, styles: [\"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJ0cmVlLWxpc3QuY29tcG9uZW50LnNjc3MifQ== */\"] });\r\n"]},"metadata":{},"sourceType":"module"}